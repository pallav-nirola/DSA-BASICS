#include <iostream>
#include <vector>
using namespace std;


class Node
{
public:
    int val;
    Node *left;
    Node *right;
    Node(int v)
    {

        val = v;
        left = NULL;
        right = NULL;
    }
};

Node *insertBST(Node *root, int val)
{
    if (root == NULL)
        return new Node(val);

    if (val < (*root).val)
        (*root).left = insertBST((*root).left, val);

    else
        (*root).right = insertBST((*root).right, val);

    return root;
}

Node *buildBST(const vector<int> &nums)
{
    Node *root = NULL;
    for (int val : nums)
        root = insertBST(root, val);
    return root;
}

void inorder(Node *root)
{
    if (!root)
        return;
    inorder((*root).left);
    cout << (*root).val << " ";
    inorder((*root).right);
}

int main()
{
    vector<int> values = {8, 3, 10, 1, 6, 14, 4, 7, 13};

    Node *root = buildBST(values);

    cout << "Inorder Traversal of BST: ";
    inorder(root);
    cout << endl;

    return 0;
}
