#include <iostream>
using namespace std;
class Node
{
public:
    int data;
    Node *next;

    Node(int value)
    {
        data = value;
        next = NULL;
    }
};
class LinkedLists
{
private:
    Node *head;
    Node *tail;

public:
    LinkedLists()
    {
        head = NULL;
        tail = NULL;
    }
    void push_front(int val)
    {
        Node *newNode = new Node(val);
        if (head == NULL)
        {
            head = newNode;
            tail = newNode;
            tail->next = head;
        }
        else
        {
            newNode->next = head;
            head = newNode;
            tail->next = head;
        }
    }
    void display()
    {
        if (head == NULL)
        {
            cout << "KUCH NHI" << endl;
            return;
        }
        else
        {
            Node *Temp = head;
            while (Temp != NULL)
            {
                cout << (*Temp).data << endl;
                Temp = (*Temp).next;
                if (Temp == head)
                {
                    break;
                }
            }
        }
    }
 void josephus(int k) {
        Node* p = head;
        Node* q = nullptr;

        while (p->next != p) {  // until one node remains
            for (int i = 0; i < k-1; i++) {
                q = p;
                p = p->next;
            }
            cout << "Eliminated: " << p->data << endl;
            q->next = p->next; // remove node
            delete p;
            p = q->next;
        }
        cout << "Child who becomes IT is " << p->data << endl;
    }
    void push_back(int val)
    {
        Node *newNode = new Node(val);
        if (head == NULL)
        {
            head = NULL;
            tail = NULL;
            (*tail).next = head;
        }
        else
        {
            newNode->next = head;
            tail->next = newNode;
            tail = newNode;
        }
    }
    void pop_front()
    {

        Node *Temp = head;
        if (head == NULL)
        {
            cout << "Kuch Nhi";
            return;
        }
        else
        {
            tail->next = head->next;
            head = head->next;
            delete Temp;
        }
    }
    void pop_back()
    {
        if (head == tail)
        {
            tail = head;
        }
        if (head == NULL)
        {
            cout << "Kuch Nhi";
            return;
        }
        else
        {
            Node *temp = head;
            while ((*temp).next != tail)
            {
                temp = temp->next;
            }
            (*temp).next = head;
            delete tail;
            tail = temp;
        }
    }
};

int main()
{
    LinkedLists Lists;
    Lists.push_front(2);
    Lists.push_front(3);
    Lists.push_front(4);
    Lists.push_front(5);
    Lists.push_front(6);
    Lists.push_front(7);
    Lists.push_front(8);
    Lists.push_back(9);
    Lists.push_back(10);
    Lists.push_back(11);
    Lists.pop_front();
    Lists.pop_back();
    Lists.display();

    return 0;
}
