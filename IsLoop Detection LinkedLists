#include <iostream>
using namespace std;
class Node
{
public:
    int data;
    Node *next;
    

    Node(int value)
    {
        data = value;
        next = NULL;
        
    }
};
class LinkedLists
{
private:
    Node *head;
    Node *tail;

public:
    LinkedLists()
    {
        head = NULL;
        tail = NULL;
    }
    void push_front(int val)
    {
        Node *newNode = new Node(val);
        if (head == NULL)
        {
            head = newNode;
            tail = newNode;
        }
        else
        {
            (*newNode).next = head;
          
            head = newNode;
        }
    }
    void display()
    {
        Node *temp = head;

        while (temp != NULL)
        {
            cout << (*temp).data << " ";
            temp = (*temp).next;
        }
    }
    bool isLoop(){
        Node *slow  =head;
        Node *fast = head;
        while (fast!= NULL && (*fast).next !=NULL)
        {
            /* code */slow = (*slow).next;
            fast = (*(*fast).next).next;
            if (slow == fast)
            {
               cout<<"INFINITE LOOP";
               return true;
            }
    }
    cout<<"FINITE LOOP"<<endl;
return false;
}
};
   
   
int main()
{
   LinkedLists Lists;
    Lists.push_front(2);
    Lists.push_front(3);
    Lists.push_front(4);
    Lists.push_front(5);
    Lists.push_front(6);
    Lists.push_front(7);
    Lists.push_front(8);
    Lists.display();
  Lists.isLoop();
    return 0;
}
