#include <iostream>
using namespace std;
class Node
{
public:
    int data;
    Node *next;

    Node(int value)
    {
        data = value;
        next = NULL;
    }
};

class LinkedLists
{
private:
    Node *head;
    Node *tail;

public:
    LinkedLists()
    {
        head = NULL;
        tail = NULL;
    }
    void insert(int val)
    {
        Node *newNode = new Node(val);
        if (head == NULL)
        {
            head = tail = newNode;
        }
        else
        {
            (*newNode).next = head;
            head = newNode;
        }
    }
    void push_back(int val)
    {
        Node *newNode = new Node(val);
        if (head == NULL)
        {
            head = tail = newNode;
        }
        else
        {
            (*tail).next = newNode;
            tail = newNode;
        }
    }
    void pop_front()
    {
        Node *filhaal = head;
        head = (*head).next;
        (*filhaal).next = NULL;
        delete filhaal;
    }
    void pop_back()
    {
        Node *AbhiKyLiy = head;
        while ((*AbhiKyLiy).next != tail)
        {
            AbhiKyLiy = (*AbhiKyLiy).next;
        }

        (*AbhiKyLiy).next = NULL;
        delete tail;
        tail = AbhiKyLiy;
    }
void search(int key)
    {
        Node *Temp;
        Temp = head;
        int idx = 0;
        while (Temp != NULL)
        {
            if ((*Temp).data == key)
            {
                cout << "Yes we have found that " << idx << endl;
                return;
            }
            else
            {
                Temp = (*Temp).next;
                idx++;
            }
        }
    }
void insert_at_position(int val, int pos)
    {
        Node *newNode = new Node(val);
        if (pos == 0)
        {
            push_front(val);
        }
        else
        {
            Node *temp = head;

            for (int i = 0; i < pos - 1; i++)
            {
                temp = (*temp).next;
            }
            (*newNode).next = (*temp).next;
            (*temp).next = newNode;
        }
    }
    void display()
    {
        Node *temp = head;
        while (temp != NULL)
        {
            cout << (*temp).data << " ";
            temp = (*temp).next;
        }
    }
};

int main()
{
    LinkedLists Lists;
    Lists.insert(2);
    Lists.insert(3);
    Lists.insert(4);
    Lists.insert(5);
    Lists.push_back(6);
    Lists.push_back(7);
    Lists.pop_front();
     Lists.pop_back();
    Lists.display();
   

    return 0;
}

           
